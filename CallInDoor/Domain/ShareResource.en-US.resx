<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BlockUserMessage" xml:space="preserve">
    <value>Your account has been locked by admin</value>
  </data>
  <data name="cardNameAlreadyExist" xml:space="preserve">
    <value>card name already exist</value>
  </data>
  <data name="ConfirmPhoneMessage" xml:space="preserve">
    <value>Please confirm Your Account</value>
  </data>
  <data name="EditableProfileNotAllowed" xml:space="preserve">
    <value>You are not allowed to edit profiles</value>
  </data>
  <data name="ErrorMessage" xml:space="preserve">
    <value>Operation Failed</value>
  </data>
  <data name="ForniddenMessage" xml:space="preserve">
    <value>Acess Denied</value>
  </data>
  <data name="HasReserveRequest" xml:space="preserve">
    <value>You have a registered request to this service</value>
  </data>
  <data name="InCorrectPassword" xml:space="preserve">
    <value>inCorrect password</value>
  </data>
  <data name="InternalServerMessage" xml:space="preserve">
    <value>Sth went wrong</value>
  </data>
  <data name="InvaliAmountForTransaction" xml:space="preserve">
    <value>the entry amount is more than your wallet balance</value>
  </data>
  <data name="InvalidAnswer" xml:space="preserve">
    <value>invalid answer </value>
  </data>
  <data name="InvalidaServiceCategory" xml:space="preserve">
    <value>invalid service category</value>
  </data>
  <data name="InvalidAttamp" xml:space="preserve">
    <value>invalid attamp</value>
  </data>
  <data name="InvalidCultureName" xml:space="preserve">
    <value>Invalid culture name</value>
  </data>
  <data name="InvalidDiscointCode" xml:space="preserve">
    <value>invalid discount code</value>
  </data>
  <data name="InvalidInput" xml:space="preserve">
    <value>invalid input</value>
  </data>
  <data name="InvalidPackageType" xml:space="preserve">
    <value>invalid package type</value>
  </data>
  <data name="InvalidPhoneNumber" xml:space="preserve">
    <value>invalid phone number</value>
  </data>
  <data name="InvalidQuestion" xml:space="preserve">
    <value>invalid question</value>
  </data>
  <data name="InValidServiceType" xml:space="preserve">
    <value>service type is invalid</value>
  </data>
  <data name="LockedOutMessage" xml:space="preserve">
    <value>user account locked out</value>
  </data>
  <data name="Noquestoin" xml:space="preserve">
    <value>there is no question</value>
  </data>
  <data name="NotEnoughtBalance" xml:space="preserve">
    <value>your wallet balance is not enough</value>
  </data>
  <data name="NotFound" xml:space="preserve">
    <value>not found</value>
  </data>
  <data name="NumberOfFreeMessagesCompleted" xml:space="preserve">
    <value>Your authorized message count has expired</value>
  </data>
  <data name="PhoneNumberAlreadyExist" xml:space="preserve">
    <value>phone number  already  exist</value>
  </data>
  <data name="problemUploadingTheFileMessage" xml:space="preserve">
    <value>there is a problem to uploading the file</value>
  </data>
  <data name="ProfileRejectedMessage" xml:space="preserve">
    <value>your profile rejected for this service</value>
  </data>
  <data name="ProviderIsUnAvailableMessage" xml:space="preserve">
    <value>provide is not available</value>
  </data>
  <data name="RequestNotConfirmedMessgaes" xml:space="preserve">
    <value>request not confirmed by provider messgaes</value>
  </data>
  <data name="ServiceIsDisabled" xml:space="preserve">
    <value>service is disable</value>
  </data>
  <data name="ServiceNotFound" xml:space="preserve">
    <value>service notfound</value>
  </data>
  <data name="somethingWentWrongForChaing" xml:space="preserve">
    <value>something went wrong </value>
  </data>
  <data name="SuccessMessage" xml:space="preserve">
    <value>successful Submit</value>
  </data>
  <data name="TextIsRequired" xml:space="preserve">
    <value>text Is required</value>
  </data>
  <data name="TheFileIsInValid" xml:space="preserve">
    <value>file format is invalid</value>
  </data>
  <data name="TheFileIsRequired" xml:space="preserve">
    <value>file is required</value>
  </data>
  <data name="TheFileIsTooLarge" xml:space="preserve">
    <value>file is too large</value>
  </data>
  <data name="TicketIsClosedMessage" xml:space="preserve">
    <value>the tiket isclosed</value>
  </data>
  <data name="UnauthorizedMessage" xml:space="preserve">
    <value>you are  unauthorized</value>
  </data>
  <data name="UnMathPhoneNumberPassword" xml:space="preserve">
    <value>invalid phone number or password</value>
  </data>
  <data name="VoiceIsrequired" xml:space="preserve">
    <value>voice is required</value>
  </data>
  <data name="VoiceIsTooLarge" xml:space="preserve">
    <value>vocie is too large</value>
  </data>
  <data name="YouAreProviderOfThisService" xml:space="preserve">
    <value>you are provider of service . you cant buy package</value>
  </data>
  <data name="YouCantRequestToACompay" xml:space="preserve">
    <value>you cant request to a compay because you are a company</value>
  </data>
  <data name="YouCantRequestToYourSelf" xml:space="preserve">
    <value>invalid request</value>
  </data>
  <data name="YouCurrentlyHaveAnActivePackage" xml:space="preserve">
    <value>you currently have an active package</value>
  </data>
  <data name="YouDOntAnyWallet" xml:space="preserve">
    <value>you dont have wallet</value>
  </data>
  <data name="YouDontHaveAnyPackage" xml:space="preserve">
    <value>you dont have any  active package</value>
  </data>
  <data name="YouHaveReservedService" xml:space="preserve">
    <value>You have already been a member of this category</value>
  </data>
  <data name="YourPackageExpired" xml:space="preserve">
    <value>Your package is expired</value>
  </data>
  <data name="YourPackageExpiredOrNoPlan" xml:space="preserve">
    <value>your dont have package or package is expire</value>
  </data>
</root>